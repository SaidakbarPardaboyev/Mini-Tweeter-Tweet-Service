// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.21.12
// source: tweet_medias.proto

package tweets_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TweetMedia message
type TweetMedia struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TweetId       string                 `protobuf:"bytes,2,opt,name=tweet_id,json=tweetId,proto3" json:"tweet_id,omitempty"`
	MediaType     string                 `protobuf:"bytes,3,opt,name=media_type,json=mediaType,proto3" json:"media_type,omitempty"`
	Url           string                 `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TweetMedia) Reset() {
	*x = TweetMedia{}
	mi := &file_tweet_medias_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TweetMedia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TweetMedia) ProtoMessage() {}

func (x *TweetMedia) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_medias_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TweetMedia.ProtoReflect.Descriptor instead.
func (*TweetMedia) Descriptor() ([]byte, []int) {
	return file_tweet_medias_proto_rawDescGZIP(), []int{0}
}

func (x *TweetMedia) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TweetMedia) GetTweetId() string {
	if x != nil {
		return x.TweetId
	}
	return ""
}

func (x *TweetMedia) GetMediaType() string {
	if x != nil {
		return x.MediaType
	}
	return ""
}

func (x *TweetMedia) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// Request message for CreateTweetMedia
type CreateTweetMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TweetMedia    *TweetMedia            `protobuf:"bytes,1,opt,name=TweetMedia,proto3" json:"TweetMedia,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTweetMediaRequest) Reset() {
	*x = CreateTweetMediaRequest{}
	mi := &file_tweet_medias_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTweetMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTweetMediaRequest) ProtoMessage() {}

func (x *CreateTweetMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_medias_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTweetMediaRequest.ProtoReflect.Descriptor instead.
func (*CreateTweetMediaRequest) Descriptor() ([]byte, []int) {
	return file_tweet_medias_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTweetMediaRequest) GetTweetMedia() *TweetMedia {
	if x != nil {
		return x.TweetMedia
	}
	return nil
}

// Response message for CreateTweetMedia
type CreateTweetMediaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTweetMediaResponse) Reset() {
	*x = CreateTweetMediaResponse{}
	mi := &file_tweet_medias_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTweetMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTweetMediaResponse) ProtoMessage() {}

func (x *CreateTweetMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_medias_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTweetMediaResponse.ProtoReflect.Descriptor instead.
func (*CreateTweetMediaResponse) Descriptor() ([]byte, []int) {
	return file_tweet_medias_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTweetMediaResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Request message for GetTweetMedia
type GetTweetMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTweetMediaRequest) Reset() {
	*x = GetTweetMediaRequest{}
	mi := &file_tweet_medias_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTweetMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTweetMediaRequest) ProtoMessage() {}

func (x *GetTweetMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_medias_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTweetMediaRequest.ProtoReflect.Descriptor instead.
func (*GetTweetMediaRequest) Descriptor() ([]byte, []int) {
	return file_tweet_medias_proto_rawDescGZIP(), []int{3}
}

func (x *GetTweetMediaRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Request message for GetListTweetMediaRequest
type GetListTweetMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TweetId       string                 `protobuf:"bytes,1,opt,name=tweet_id,json=tweetId,proto3" json:"tweet_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetListTweetMediaRequest) Reset() {
	*x = GetListTweetMediaRequest{}
	mi := &file_tweet_medias_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListTweetMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListTweetMediaRequest) ProtoMessage() {}

func (x *GetListTweetMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_medias_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListTweetMediaRequest.ProtoReflect.Descriptor instead.
func (*GetListTweetMediaRequest) Descriptor() ([]byte, []int) {
	return file_tweet_medias_proto_rawDescGZIP(), []int{4}
}

func (x *GetListTweetMediaRequest) GetTweetId() string {
	if x != nil {
		return x.TweetId
	}
	return ""
}

// Response message for GetTweetMedia
type TweetMediaList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TweetMedias   []*TweetMedia          `protobuf:"bytes,1,rep,name=TweetMedias,proto3" json:"TweetMedias,omitempty"`
	Count         int64                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TweetMediaList) Reset() {
	*x = TweetMediaList{}
	mi := &file_tweet_medias_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TweetMediaList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TweetMediaList) ProtoMessage() {}

func (x *TweetMediaList) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_medias_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TweetMediaList.ProtoReflect.Descriptor instead.
func (*TweetMediaList) Descriptor() ([]byte, []int) {
	return file_tweet_medias_proto_rawDescGZIP(), []int{5}
}

func (x *TweetMediaList) GetTweetMedias() []*TweetMedia {
	if x != nil {
		return x.TweetMedias
	}
	return nil
}

func (x *TweetMediaList) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Request message for UpdateTweetMedia
type UpdateTweetMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TweetMedia    *TweetMedia            `protobuf:"bytes,1,opt,name=TweetMedia,proto3" json:"TweetMedia,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTweetMediaRequest) Reset() {
	*x = UpdateTweetMediaRequest{}
	mi := &file_tweet_medias_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTweetMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTweetMediaRequest) ProtoMessage() {}

func (x *UpdateTweetMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_medias_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTweetMediaRequest.ProtoReflect.Descriptor instead.
func (*UpdateTweetMediaRequest) Descriptor() ([]byte, []int) {
	return file_tweet_medias_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateTweetMediaRequest) GetTweetMedia() *TweetMedia {
	if x != nil {
		return x.TweetMedia
	}
	return nil
}

// Response message for UpdateTweetMedia
type UpdateTweetMediaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTweetMediaResponse) Reset() {
	*x = UpdateTweetMediaResponse{}
	mi := &file_tweet_medias_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTweetMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTweetMediaResponse) ProtoMessage() {}

func (x *UpdateTweetMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_medias_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTweetMediaResponse.ProtoReflect.Descriptor instead.
func (*UpdateTweetMediaResponse) Descriptor() ([]byte, []int) {
	return file_tweet_medias_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateTweetMediaResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Request message for DeleteTweetMedia
type DeleteTweetMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTweetMediaRequest) Reset() {
	*x = DeleteTweetMediaRequest{}
	mi := &file_tweet_medias_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTweetMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTweetMediaRequest) ProtoMessage() {}

func (x *DeleteTweetMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_medias_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTweetMediaRequest.ProtoReflect.Descriptor instead.
func (*DeleteTweetMediaRequest) Descriptor() ([]byte, []int) {
	return file_tweet_medias_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteTweetMediaRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Response message for DeleteTweetMedia
type DeleteTweetMediaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTweetMediaResponse) Reset() {
	*x = DeleteTweetMediaResponse{}
	mi := &file_tweet_medias_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTweetMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTweetMediaResponse) ProtoMessage() {}

func (x *DeleteTweetMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_medias_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTweetMediaResponse.ProtoReflect.Descriptor instead.
func (*DeleteTweetMediaResponse) Descriptor() ([]byte, []int) {
	return file_tweet_medias_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteTweetMediaResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Request message for DeleteTweetMedia
type DeleteTweetMediaWithTweetIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TweetId       string                 `protobuf:"bytes,1,opt,name=tweet_id,json=tweetId,proto3" json:"tweet_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTweetMediaWithTweetIDRequest) Reset() {
	*x = DeleteTweetMediaWithTweetIDRequest{}
	mi := &file_tweet_medias_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTweetMediaWithTweetIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTweetMediaWithTweetIDRequest) ProtoMessage() {}

func (x *DeleteTweetMediaWithTweetIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_medias_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTweetMediaWithTweetIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteTweetMediaWithTweetIDRequest) Descriptor() ([]byte, []int) {
	return file_tweet_medias_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteTweetMediaWithTweetIDRequest) GetTweetId() string {
	if x != nil {
		return x.TweetId
	}
	return ""
}

// Response message for DeleteTweetMedia
type DeleteTweetMediaWithTweetIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTweetMediaWithTweetIDResponse) Reset() {
	*x = DeleteTweetMediaWithTweetIDResponse{}
	mi := &file_tweet_medias_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTweetMediaWithTweetIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTweetMediaWithTweetIDResponse) ProtoMessage() {}

func (x *DeleteTweetMediaWithTweetIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_medias_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTweetMediaWithTweetIDResponse.ProtoReflect.Descriptor instead.
func (*DeleteTweetMediaWithTweetIDResponse) Descriptor() ([]byte, []int) {
	return file_tweet_medias_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteTweetMediaWithTweetIDResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_tweet_medias_proto protoreflect.FileDescriptor

var file_tweet_medias_proto_rawDesc = string([]byte{
	0x0a, 0x12, 0x74, 0x77, 0x65, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x22, 0x68, 0x0a, 0x0a, 0x54, 0x77, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x77, 0x65, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x77, 0x65, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x55,
	0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x54, 0x77, 0x65,
	0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x74, 0x77, 0x65, 0x65, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54,
	0x77, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x0a, 0x54, 0x77, 0x65, 0x65, 0x74,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x22, 0x2a, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x77, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x26, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x77, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x77, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x77, 0x65, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x77, 0x65, 0x65, 0x74, 0x49, 0x64,
	0x22, 0x64, 0x0a, 0x0e, 0x54, 0x77, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x54, 0x77, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x77, 0x65, 0x65, 0x74, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x52, 0x0b, 0x54, 0x77, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x55, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x77, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x54, 0x77, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x77, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x52, 0x0a, 0x54, 0x77, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x22, 0x34, 0x0a,
	0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x29, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x77, 0x65,
	0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x34,
	0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0x3f, 0x0a, 0x22, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x77,
	0x65, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x57, 0x69, 0x74, 0x68, 0x54, 0x77, 0x65, 0x65,
	0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x77,
	0x65, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x77,
	0x65, 0x65, 0x74, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x23, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x77, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x57, 0x69, 0x74, 0x68, 0x54, 0x77, 0x65,
	0x65, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0x84, 0x05, 0x0a, 0x12, 0x54, 0x77, 0x65, 0x65, 0x74,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x65, 0x0a,
	0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x12, 0x27, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x74, 0x77, 0x65,
	0x65, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x77, 0x65, 0x65, 0x74,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x24, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x77, 0x65, 0x65, 0x74, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x74, 0x77,
	0x65, 0x65, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x77, 0x65,
	0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x5d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x77, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x28, 0x2e, 0x74,
	0x77, 0x65, 0x65, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x77, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x73, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x77, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x65, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x77, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x27, 0x2e, 0x74, 0x77, 0x65,
	0x65, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a,
	0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x12, 0x27, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x74, 0x77, 0x65,
	0x65, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x77, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x57, 0x69, 0x74, 0x68, 0x54, 0x77, 0x65,
	0x65, 0x74, 0x49, 0x44, 0x12, 0x32, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65,
	0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x57, 0x69, 0x74, 0x68, 0x54, 0x77, 0x65, 0x65, 0x74, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x77, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x57, 0x69, 0x74, 0x68, 0x54, 0x77,
	0x65, 0x65, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x19, 0x5a,
	0x17, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x77, 0x65, 0x65, 0x74, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_tweet_medias_proto_rawDescOnce sync.Once
	file_tweet_medias_proto_rawDescData []byte
)

func file_tweet_medias_proto_rawDescGZIP() []byte {
	file_tweet_medias_proto_rawDescOnce.Do(func() {
		file_tweet_medias_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tweet_medias_proto_rawDesc), len(file_tweet_medias_proto_rawDesc)))
	})
	return file_tweet_medias_proto_rawDescData
}

var file_tweet_medias_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_tweet_medias_proto_goTypes = []any{
	(*TweetMedia)(nil),                          // 0: tweets_service.TweetMedia
	(*CreateTweetMediaRequest)(nil),             // 1: tweets_service.CreateTweetMediaRequest
	(*CreateTweetMediaResponse)(nil),            // 2: tweets_service.CreateTweetMediaResponse
	(*GetTweetMediaRequest)(nil),                // 3: tweets_service.GetTweetMediaRequest
	(*GetListTweetMediaRequest)(nil),            // 4: tweets_service.GetListTweetMediaRequest
	(*TweetMediaList)(nil),                      // 5: tweets_service.TweetMediaList
	(*UpdateTweetMediaRequest)(nil),             // 6: tweets_service.UpdateTweetMediaRequest
	(*UpdateTweetMediaResponse)(nil),            // 7: tweets_service.UpdateTweetMediaResponse
	(*DeleteTweetMediaRequest)(nil),             // 8: tweets_service.DeleteTweetMediaRequest
	(*DeleteTweetMediaResponse)(nil),            // 9: tweets_service.DeleteTweetMediaResponse
	(*DeleteTweetMediaWithTweetIDRequest)(nil),  // 10: tweets_service.DeleteTweetMediaWithTweetIDRequest
	(*DeleteTweetMediaWithTweetIDResponse)(nil), // 11: tweets_service.DeleteTweetMediaWithTweetIDResponse
}
var file_tweet_medias_proto_depIdxs = []int32{
	0,  // 0: tweets_service.CreateTweetMediaRequest.TweetMedia:type_name -> tweets_service.TweetMedia
	0,  // 1: tweets_service.TweetMediaList.TweetMedias:type_name -> tweets_service.TweetMedia
	0,  // 2: tweets_service.UpdateTweetMediaRequest.TweetMedia:type_name -> tweets_service.TweetMedia
	1,  // 3: tweets_service.TweetMediasService.CreateTweetMedia:input_type -> tweets_service.CreateTweetMediaRequest
	3,  // 4: tweets_service.TweetMediasService.GetTweetMedia:input_type -> tweets_service.GetTweetMediaRequest
	4,  // 5: tweets_service.TweetMediasService.GetListTweetMedia:input_type -> tweets_service.GetListTweetMediaRequest
	6,  // 6: tweets_service.TweetMediasService.UpdateTweetMedia:input_type -> tweets_service.UpdateTweetMediaRequest
	8,  // 7: tweets_service.TweetMediasService.DeleteTweetMedia:input_type -> tweets_service.DeleteTweetMediaRequest
	10, // 8: tweets_service.TweetMediasService.DeleteTweetMediaWithTweetID:input_type -> tweets_service.DeleteTweetMediaWithTweetIDRequest
	2,  // 9: tweets_service.TweetMediasService.CreateTweetMedia:output_type -> tweets_service.CreateTweetMediaResponse
	0,  // 10: tweets_service.TweetMediasService.GetTweetMedia:output_type -> tweets_service.TweetMedia
	5,  // 11: tweets_service.TweetMediasService.GetListTweetMedia:output_type -> tweets_service.TweetMediaList
	7,  // 12: tweets_service.TweetMediasService.UpdateTweetMedia:output_type -> tweets_service.UpdateTweetMediaResponse
	9,  // 13: tweets_service.TweetMediasService.DeleteTweetMedia:output_type -> tweets_service.DeleteTweetMediaResponse
	11, // 14: tweets_service.TweetMediasService.DeleteTweetMediaWithTweetID:output_type -> tweets_service.DeleteTweetMediaWithTweetIDResponse
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_tweet_medias_proto_init() }
func file_tweet_medias_proto_init() {
	if File_tweet_medias_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tweet_medias_proto_rawDesc), len(file_tweet_medias_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tweet_medias_proto_goTypes,
		DependencyIndexes: file_tweet_medias_proto_depIdxs,
		MessageInfos:      file_tweet_medias_proto_msgTypes,
	}.Build()
	File_tweet_medias_proto = out.File
	file_tweet_medias_proto_goTypes = nil
	file_tweet_medias_proto_depIdxs = nil
}
