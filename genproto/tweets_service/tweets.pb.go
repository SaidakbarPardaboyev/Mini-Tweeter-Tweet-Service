// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.21.12
// source: tweets.proto

package tweets_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Tweet message
type Tweet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Medias        []*TweetMedia          `protobuf:"bytes,4,rep,name=medias,proto3" json:"medias,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tweet) Reset() {
	*x = Tweet{}
	mi := &file_tweets_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tweet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tweet) ProtoMessage() {}

func (x *Tweet) ProtoReflect() protoreflect.Message {
	mi := &file_tweets_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tweet.ProtoReflect.Descriptor instead.
func (*Tweet) Descriptor() ([]byte, []int) {
	return file_tweets_proto_rawDescGZIP(), []int{0}
}

func (x *Tweet) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Tweet) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Tweet) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Tweet) GetMedias() []*TweetMedia {
	if x != nil {
		return x.Medias
	}
	return nil
}

func (x *Tweet) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Tweet) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// Request message for CreateTweet
type CreateTweetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tweet         *Tweet                 `protobuf:"bytes,1,opt,name=Tweet,proto3" json:"Tweet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTweetRequest) Reset() {
	*x = CreateTweetRequest{}
	mi := &file_tweets_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTweetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTweetRequest) ProtoMessage() {}

func (x *CreateTweetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tweets_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTweetRequest.ProtoReflect.Descriptor instead.
func (*CreateTweetRequest) Descriptor() ([]byte, []int) {
	return file_tweets_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTweetRequest) GetTweet() *Tweet {
	if x != nil {
		return x.Tweet
	}
	return nil
}

// Response message for CreateTweet
type CreateTweetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTweetResponse) Reset() {
	*x = CreateTweetResponse{}
	mi := &file_tweets_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTweetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTweetResponse) ProtoMessage() {}

func (x *CreateTweetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tweets_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTweetResponse.ProtoReflect.Descriptor instead.
func (*CreateTweetResponse) Descriptor() ([]byte, []int) {
	return file_tweets_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTweetResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Request message for GetTweet
type GetTweetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTweetRequest) Reset() {
	*x = GetTweetRequest{}
	mi := &file_tweets_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTweetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTweetRequest) ProtoMessage() {}

func (x *GetTweetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tweets_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTweetRequest.ProtoReflect.Descriptor instead.
func (*GetTweetRequest) Descriptor() ([]byte, []int) {
	return file_tweets_proto_rawDescGZIP(), []int{3}
}

func (x *GetTweetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Request message for GetTweet
type GetListTweetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Search        *string                `protobuf:"bytes,3,opt,name=search,proto3,oneof" json:"search,omitempty"`               // Merged field for content
	SortBy        *string                `protobuf:"bytes,4,opt,name=sort_by,json=sortBy,proto3,oneof" json:"sort_by,omitempty"` // Field name for sorting
	Order         *string                `protobuf:"bytes,5,opt,name=order,proto3,oneof" json:"order,omitempty"`                 // "asc" or "desc"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetListTweetRequest) Reset() {
	*x = GetListTweetRequest{}
	mi := &file_tweets_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListTweetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListTweetRequest) ProtoMessage() {}

func (x *GetListTweetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tweets_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListTweetRequest.ProtoReflect.Descriptor instead.
func (*GetListTweetRequest) Descriptor() ([]byte, []int) {
	return file_tweets_proto_rawDescGZIP(), []int{4}
}

func (x *GetListTweetRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetListTweetRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetListTweetRequest) GetSearch() string {
	if x != nil && x.Search != nil {
		return *x.Search
	}
	return ""
}

func (x *GetListTweetRequest) GetSortBy() string {
	if x != nil && x.SortBy != nil {
		return *x.SortBy
	}
	return ""
}

func (x *GetListTweetRequest) GetOrder() string {
	if x != nil && x.Order != nil {
		return *x.Order
	}
	return ""
}

// Response message for GetTweet
type TweetList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tweets        []*Tweet               `protobuf:"bytes,1,rep,name=Tweets,proto3" json:"Tweets,omitempty"`
	Count         int64                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TweetList) Reset() {
	*x = TweetList{}
	mi := &file_tweets_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TweetList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TweetList) ProtoMessage() {}

func (x *TweetList) ProtoReflect() protoreflect.Message {
	mi := &file_tweets_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TweetList.ProtoReflect.Descriptor instead.
func (*TweetList) Descriptor() ([]byte, []int) {
	return file_tweets_proto_rawDescGZIP(), []int{5}
}

func (x *TweetList) GetTweets() []*Tweet {
	if x != nil {
		return x.Tweets
	}
	return nil
}

func (x *TweetList) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Request message for UpdateTweet
type UpdateTweetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tweet         *Tweet                 `protobuf:"bytes,1,opt,name=Tweet,proto3" json:"Tweet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTweetRequest) Reset() {
	*x = UpdateTweetRequest{}
	mi := &file_tweets_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTweetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTweetRequest) ProtoMessage() {}

func (x *UpdateTweetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tweets_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTweetRequest.ProtoReflect.Descriptor instead.
func (*UpdateTweetRequest) Descriptor() ([]byte, []int) {
	return file_tweets_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateTweetRequest) GetTweet() *Tweet {
	if x != nil {
		return x.Tweet
	}
	return nil
}

// Response message for UpdateTweet
type UpdateTweetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTweetResponse) Reset() {
	*x = UpdateTweetResponse{}
	mi := &file_tweets_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTweetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTweetResponse) ProtoMessage() {}

func (x *UpdateTweetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tweets_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTweetResponse.ProtoReflect.Descriptor instead.
func (*UpdateTweetResponse) Descriptor() ([]byte, []int) {
	return file_tweets_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateTweetResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Request message for DeleteTweet
type DeleteTweetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTweetRequest) Reset() {
	*x = DeleteTweetRequest{}
	mi := &file_tweets_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTweetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTweetRequest) ProtoMessage() {}

func (x *DeleteTweetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tweets_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTweetRequest.ProtoReflect.Descriptor instead.
func (*DeleteTweetRequest) Descriptor() ([]byte, []int) {
	return file_tweets_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteTweetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Response message for DeleteTweet
type DeleteTweetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTweetResponse) Reset() {
	*x = DeleteTweetResponse{}
	mi := &file_tweets_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTweetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTweetResponse) ProtoMessage() {}

func (x *DeleteTweetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tweets_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTweetResponse.ProtoReflect.Descriptor instead.
func (*DeleteTweetResponse) Descriptor() ([]byte, []int) {
	return file_tweets_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteTweetResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_tweets_proto protoreflect.FileDescriptor

var file_tweets_proto_rawDesc = string([]byte{
	0x0a, 0x0c, 0x74, 0x77, 0x65, 0x65, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x74, 0x77, 0x65, 0x65, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x12,
	0x74, 0x77, 0x65, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xbc, 0x01, 0x0a, 0x05, 0x54, 0x77, 0x65, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x32, 0x0a, 0x06, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x54, 0x77, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x06, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x41, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x05, 0x54, 0x77, 0x65, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x73, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x05, 0x54,
	0x77, 0x65, 0x65, 0x74, 0x22, 0x25, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x77,
	0x65, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x21, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb6,
	0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x1b, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a,
	0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x50, 0x0a, 0x09, 0x54, 0x77, 0x65, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x54, 0x77, 0x65, 0x65, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x06, 0x54, 0x77, 0x65,
	0x65, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x41, 0x0a, 0x12, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2b, 0x0a, 0x05, 0x54, 0x77, 0x65, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x05, 0x54, 0x77, 0x65, 0x65, 0x74, 0x22, 0x2f, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x24, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x2f, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x77, 0x65,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x32, 0xab, 0x03, 0x0a, 0x0d, 0x54, 0x77, 0x65, 0x65, 0x74, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x56, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x77, 0x65, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x77, 0x65,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x74, 0x77, 0x65, 0x65,
	0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x77, 0x65, 0x65, 0x74, 0x12, 0x1f, 0x2e, 0x74, 0x77, 0x65,
	0x65, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x77, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x74, 0x77,
	0x65, 0x65, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x77, 0x65,
	0x65, 0x74, 0x12, 0x4e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x77, 0x65,
	0x65, 0x74, 0x12, 0x23, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x77, 0x65, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x77, 0x65, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x56, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65,
	0x74, 0x12, 0x22, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x77, 0x65,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0b, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x74, 0x77, 0x65, 0x65,
	0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x74, 0x77, 0x65, 0x65, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x19, 0x5a, 0x17, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74,
	0x77, 0x65, 0x65, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_tweets_proto_rawDescOnce sync.Once
	file_tweets_proto_rawDescData []byte
)

func file_tweets_proto_rawDescGZIP() []byte {
	file_tweets_proto_rawDescOnce.Do(func() {
		file_tweets_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tweets_proto_rawDesc), len(file_tweets_proto_rawDesc)))
	})
	return file_tweets_proto_rawDescData
}

var file_tweets_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_tweets_proto_goTypes = []any{
	(*Tweet)(nil),               // 0: tweets_service.Tweet
	(*CreateTweetRequest)(nil),  // 1: tweets_service.CreateTweetRequest
	(*CreateTweetResponse)(nil), // 2: tweets_service.CreateTweetResponse
	(*GetTweetRequest)(nil),     // 3: tweets_service.GetTweetRequest
	(*GetListTweetRequest)(nil), // 4: tweets_service.GetListTweetRequest
	(*TweetList)(nil),           // 5: tweets_service.TweetList
	(*UpdateTweetRequest)(nil),  // 6: tweets_service.UpdateTweetRequest
	(*UpdateTweetResponse)(nil), // 7: tweets_service.UpdateTweetResponse
	(*DeleteTweetRequest)(nil),  // 8: tweets_service.DeleteTweetRequest
	(*DeleteTweetResponse)(nil), // 9: tweets_service.DeleteTweetResponse
	(*TweetMedia)(nil),          // 10: tweets_service.TweetMedia
}
var file_tweets_proto_depIdxs = []int32{
	10, // 0: tweets_service.Tweet.medias:type_name -> tweets_service.TweetMedia
	0,  // 1: tweets_service.CreateTweetRequest.Tweet:type_name -> tweets_service.Tweet
	0,  // 2: tweets_service.TweetList.Tweets:type_name -> tweets_service.Tweet
	0,  // 3: tweets_service.UpdateTweetRequest.Tweet:type_name -> tweets_service.Tweet
	1,  // 4: tweets_service.TweetsService.CreateTweet:input_type -> tweets_service.CreateTweetRequest
	3,  // 5: tweets_service.TweetsService.GetTweet:input_type -> tweets_service.GetTweetRequest
	4,  // 6: tweets_service.TweetsService.GetListTweet:input_type -> tweets_service.GetListTweetRequest
	6,  // 7: tweets_service.TweetsService.UpdateTweet:input_type -> tweets_service.UpdateTweetRequest
	8,  // 8: tweets_service.TweetsService.DeleteTweet:input_type -> tweets_service.DeleteTweetRequest
	2,  // 9: tweets_service.TweetsService.CreateTweet:output_type -> tweets_service.CreateTweetResponse
	0,  // 10: tweets_service.TweetsService.GetTweet:output_type -> tweets_service.Tweet
	5,  // 11: tweets_service.TweetsService.GetListTweet:output_type -> tweets_service.TweetList
	7,  // 12: tweets_service.TweetsService.UpdateTweet:output_type -> tweets_service.UpdateTweetResponse
	9,  // 13: tweets_service.TweetsService.DeleteTweet:output_type -> tweets_service.DeleteTweetResponse
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_tweets_proto_init() }
func file_tweets_proto_init() {
	if File_tweets_proto != nil {
		return
	}
	file_tweet_medias_proto_init()
	file_tweets_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tweets_proto_rawDesc), len(file_tweets_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tweets_proto_goTypes,
		DependencyIndexes: file_tweets_proto_depIdxs,
		MessageInfos:      file_tweets_proto_msgTypes,
	}.Build()
	File_tweets_proto = out.File
	file_tweets_proto_goTypes = nil
	file_tweets_proto_depIdxs = nil
}
